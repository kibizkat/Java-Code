//Trabalho 1° Bimestre de Física.
//Trabalho feito referente a ordenação com base na força de aceleração de um objeto/obstáculo

import javax.swing.*;
import java.awt.*;
import java.util.Arrays;
import java.util.Comparator;

public class CaixaAceleracao {

    public static void main(String[] args) {
        // Solicitar o número de situações
        int numSituacoes = Integer.parseInt(JOptionPane.showInputDialog("Quantas situações você quer analisar?"));

        // Criar a tabela de entrada de dados
        String[] colunas = {"Força Esquerda (N)", "Força Direita (N)"};
        Object[][] dados = new Object[numSituacoes][2];
        JTable tabela = new JTable(dados, colunas);

        // Configurar a tabela e adicioná-la a um JScrollPane
        JScrollPane scrollPane = new JScrollPane(tabela);
        tabela.setFillsViewportHeight(true);

        // Mostrar a tabela em um JOptionPane
        int result = JOptionPane.showConfirmDialog(null, scrollPane, "Preencha as forças", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) {
            int[] forcaEsquerda = new int[numSituacoes];
            int[] forcaDireita = new int[numSituacoes];

            // Obter os valores da tabela
            try {
                for (int i = 0; i < numSituacoes; i++) {
                    forcaEsquerda[i] = Integer.parseInt(tabela.getValueAt(i, 0).toString());
                    forcaDireita[i] = Integer.parseInt(tabela.getValueAt(i, 1).toString());
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Por favor, insira valores numéricos válidos.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Calcular as acelerações
            double[] aceleracao = new double[numSituacoes];
            for (int i = 0; i < numSituacoes; i++) {
                int forcaResultante = forcaDireita[i] - forcaEsquerda[i];
                aceleracao[i] = Math.abs((double) forcaResultante); // Assumindo massa igual a 1 para simplicidade
            }

            // Ordenar os índices de acordo com a aceleração usando Arrays.sort com Comparator
            Integer[] indices = new Integer[numSituacoes];
            for (int i = 0; i < indices.length; i++) {
                indices[i] = i;
            }

            Arrays.sort(indices, new Comparator<Integer>() {
                @Override
                public int compare(Integer o1, Integer o2) {
                    return Double.compare(aceleracao[o2], aceleracao[o1]);
                }
            });

            // Construir a mensagem com a ordem das situações
            StringBuilder mensagem = new StringBuilder("Situações ordenadas por aceleração (maior para menor):\n");
            for (int i = 0; i < indices.length; i++) {
                mensagem.append((char)('a' + indices[i])).append(") ")
                        .append(forcaEsquerda[indices[i]]).append("N <- Objeto -> ")
                        .append(forcaDireita[indices[i]]).append("N\n");
            }

            // Exibir a mensagem
            JOptionPane.showMessageDialog(null, mensagem.toString(), "Resultado", JOptionPane.INFORMATION_MESSAGE);
        }
    }
}
